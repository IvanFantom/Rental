@model Rental.WebUI.ViewModels.Home.ListViewModel

@{
    var pagedList = Model.AdvertPagedList;
}
<div class="table-responsive">
    <table class="table table-hover table-condensed">
        <tr>
            <th>@Html.DisplayNameFor(m => m.AdvertPagedList.FirstOrDefault().Header)</th>
            <th>@Html.DisplayNameFor(m => m.AdvertPagedList.FirstOrDefault().Price)</th>
            <th>@Html.DisplayNameFor(m => m.AdvertPagedList.FirstOrDefault().Footage)</th>
            <th>@Html.DisplayNameFor(m => m.AdvertPagedList.FirstOrDefault().Address.Street)</th>
            <th>@Html.DisplayNameFor(m => m.AdvertPagedList.FirstOrDefault().Type)</th>
            <th></th>
        </tr>

        @foreach (var item in pagedList)
        {
            <tr>
                <td>@item.Header</td>
                <td>@item.Price</td>
                <td>@item.Footage</td>
                <td>@item.Address.Street</td>
                <td>@item.Type</td>
                <td>
                    <div class="pull-right">
                        <a href="@Url.Action("Details", "Home", routeValues: new { advertId = item.Id })" class="btn btn-default" data-modal="">
                            <i class="glyphicon glyphicon-th-list"></i>
                        </a>
                    </div>
                </td>
            </tr>
        }
    </table>
</div>

Page @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) of @pagedList.PageCount
@Html.PagedListPager(pagedList, page => Url.Action("List", "Home", routeValues: new { Model.CurrentFilter, page }))